from aiogram.types import CallbackQuery
from aiogram import Router
from aiogram import F

import json

from keyboards.inline_kb import MonitorAccountsKeyboard

from services.seeonline_api import SeeOnlineAPI

from config import load_config

router = Router()

config = load_config()


# MAIN

@router.callback_query(F.data == "get-monitor-accounts")
async def get_monitor_accounts_callback(callback: CallbackQuery):
    await callback.message.edit_text(
        '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è:',
        reply_markup=MonitorAccountsKeyboard().get_keyboard('get')
    )


# todo –¥–æ–ø–∏–ª–∏—Ç—å
@router.callback_query(F.data == "add-monitor-accounts")
async def add_monitor_accounts_callback(callback: CallbackQuery):
    await callback.message.edit_text(
        '–¢–µ–∫—É—â–∏–π callback:\n add-monitor-accounts',
        reply_markup=MonitorAccountsKeyboard.get_keyboard('main')
    )
    await callback.answer()


# todo –¥–æ–ø–∏–ª–∏—Ç—å
@router.callback_query(F.data == "edit-monitor-accounts")
async def edit_monitor_accounts_callback(callback: CallbackQuery):
    await callback.message.edit_text(
        '–¢–µ–∫—É—â–∏–π callback:\n edit-monitor-accounts',
        reply_markup=MonitorAccountsKeyboard.get_keyboard('main')
    )
    await callback.answer()


# todo –¥–æ–ø–∏–ª–∏—Ç—å
@router.callback_query(F.data == "delete-monitor-accounts")
async def delete_monitor_accounts_callback(callback: CallbackQuery):
    await callback.message.edit_text(
        '–¢–µ–∫—É—â–∏–π callback:\n delete-monitor-accounts',
        reply_markup=MonitorAccountsKeyboard.get_keyboard('main')
    )
    await callback.answer()


# todo –¥–æ–ø–∏–ª–∏—Ç—å
@router.callback_query(F.data == "auth-monitor-accounts")
async def auth_monitor_accounts_callback(callback: CallbackQuery):
    await callback.message.edit_text(
        '–¢–µ–∫—É—â–∏–π callback:\n auth-monitor-accounts',
        reply_markup=MonitorAccountsKeyboard.get_keyboard('main')
    )
    await callback.answer()


# GET

# todo –¥–æ–±–∞–≤–∏—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–æ–≤
@router.callback_query(F.data == "get-list-monitor-accounts")
async def get_list_monitor_accounts_callback(callback: CallbackQuery):
    api = SeeOnlineAPI(config.SEEONLINE_API_URL)

    monitor_accounts = await api.get_monitor_account()

    if not monitor_accounts:
        await callback.message.answer("üì≠ –°–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—É—Å—Ç.")
        return await callback.answer()

    response = "üìã <b>–°–ø–∏—Å–æ–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤:</b>\n\n"

    for account in monitor_accounts:
        response += (
            f"üîπ <b>ID:</b> {account['id']}\n"
            f"üë§ <b>User ID:</b> <code>{account['user_id']}</code>\n"
            f"üÜî <b>API ID:</b> <code>{account['api_id']}</code>\n"
            f"üîë <b>API Hash:</b> <code>{account['api_hash']}</code>\n"
            f"‚úÖ <b>–ê–∫—Ç–∏–≤–µ–Ω:</b> {'–î–∞' if account['is_active'] else '–ù–µ—Ç'}\n"
            f"üîê <b>–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω:</b> {'–î–∞' if account['is_auth'] else '–ù–µ—Ç'}\n"
            f"üïí <b>–°–æ–∑–¥–∞–Ω:</b> {account['created_at']}\n"
            f"üîÑ <b>–û–±–Ω–æ–≤–ª—ë–Ω:</b> {account['updates_at']}\n"
            f"‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n"
        )

    await callback.message.answer(response, parse_mode="HTML")
    await callback.answer()


# todo –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–µ—á–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è(fsm)
@router.callback_query(F.data == "get-monitor-account-by-pk")
async def get_monitor_account_by_pk_callback(callback: CallbackQuery):
    pass


@router.callback_query(F.data == "get-monitor-account-by-user_id")
async def get_monitor_account_by_user_id_callback(callback: CallbackQuery):
    pass
